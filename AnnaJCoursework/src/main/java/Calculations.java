
import java.util.ArrayList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Anna
 */
public class Calculations extends javax.swing.JFrame {

    static User user;

    /**
     * Creates new form Calculations
     */
    public Calculations(User user) {
        initComponents();
        this.user = user;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblVal1 = new javax.swing.JLabel();
        cbVal1 = new javax.swing.JComboBox<>();
        tfVal1 = new javax.swing.JTextField();
        lblVal2 = new javax.swing.JLabel();
        cbVal2 = new javax.swing.JComboBox<>();
        tfVal2 = new javax.swing.JTextField();
        lblResult = new javax.swing.JLabel();
        lblUnits = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblResultResult = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnCalculate = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(113, 141, 206));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        lblVal1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblVal1.setText("Value 1:");

        cbVal1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cbVal1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-None selected-", "Density/ g dm^-3", "Energy/ J", "Enthalpy change/ J mol^-1", "Frequency/ Hz", "Mass/ g", "Moles", "Mr", "Pressure/ Pa", "Specific heat capacity/ J g^-1 K^-1", "Temperature/ K", "Volume/ dm^3", "Wavelength/ m", "Gas Constant/ J mol^1 K^1", "Planck Constant/ J Hz^-1", "Speed of Light/ m s^-1" }));
        cbVal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbVal1ActionPerformed(evt);
            }
        });

        tfVal1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfVal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfVal1ActionPerformed(evt);
            }
        });

        lblVal2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblVal2.setText("Value 2:");

        cbVal2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cbVal2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-None selected-", "Density/ g dm^-3", "Energy/ J", "Enthalpy change/ J mol^-1", "Frequency/ Hz", "Mass/ g", "Moles", "Mr", "Pressure/ Pa", "Specific heat capacity/J g^-1 K^-1", "Temperature/ K", "Volume/dm^3", "Wavelength/ m" }));
        cbVal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbVal2ActionPerformed(evt);
            }
        });

        tfVal2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        lblResult.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblResult.setText("Result:");

        lblUnits.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblUnits.setText("<units>");

        btnBack.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblResultResult.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblResultResult.setText("<result>");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Select your values and type their numbers");

        btnCalculate.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnCalculate.setText("Calculate");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        lblError.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblVal2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbVal2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblVal1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbVal1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfVal1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfVal2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnCalculate)
                                .addGap(102, 102, 102))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblResult)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblResultResult)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblUnits, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblVal1, lblVal2});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbVal1, cbVal2});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {tfVal1, tfVal2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVal1)
                    .addComponent(cbVal1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfVal1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVal2)
                    .addComponent(cbVal2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfVal2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalculate))
                .addGap(18, 18, 18)
                .addComponent(lblError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblResult)
                    .addComponent(lblResultResult)
                    .addComponent(lblUnits))
                .addGap(91, 91, 91)
                .addComponent(btnBack)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        new CalcsOrPeriod(user).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        // TODO add your handling code here:
        lblError.setText("");
        lblResultResult.setText("");
        lblUnits.setText("");
        String value1 = String.valueOf(cbVal1.getSelectedItem());
        String value2 = String.valueOf(cbVal2.getSelectedItem());
        if (value1.contains("/")) {
            String[] parts = value1.split("/");
            value1 = parts[0];
        }
        if (value2.contains("/")) {
            String[] parts = value2.split("/");
            value2 = parts[0];
        }

        int[] positions = new DatabaseAccess().findPositions(value1, value2);
        double number1 = 0;
        double number2 = 0;
        if (value1.equals("-None Selected-") || value2.equals("-None selected-")) {
            lblError.setText("Please select two values");
        }else if(!((value1.equals("Gas Constant") || value1.equals("Planck Constant") || value1.equals("Speed of Light")) && tfVal1.getText().isEmpty()) || !(value2.equals("Gas Constant") || value2.equals("Planck Constant") || value2.equals("Speed of Light"))){
            
        }
        if (value1.equals("Gas Constant") || value1.equals("Planck Constant") || value1.equals("Speed of Light")) {
            ArrayList<String> constant1 = new DatabaseAccess().getConstant(value1);
            double actualValue = Double.valueOf(constant1.get(0));
            double SFMag = Double.valueOf(constant1.get(1));
            number1 = Math.pow(actualValue, SFMag);
        }
        if (value2.equals("Gas Constant") || value2.equals("Planck Constant") || value2.equals("Speed of Light")) {
            ArrayList<String> constant2 = new DatabaseAccess().getConstant(value2);
            double actualValue = Double.valueOf(constant2.get(0));
            double SFMag = Double.valueOf(constant2.get(1));
            number2 = Math.pow(actualValue, SFMag);
        }
        if (!(value1.equals("Gas Constant") || value1.equals("Planck Constant") || value1.equals("Speed of Light"))) {
            number1 = Double.valueOf(tfVal2.getText());
        }
        if (!(value2.equals("Gas Constant") || value2.equals("Planck Constant") || value2.equals("Speed of Light"))) {
            number2 = Double.valueOf(tfVal2.getText());
        }
        double result = new Calculator().calculate(positions, number1, number2);
        String units = new DatabaseAccess().getUnits(positions, value1, value2);
        lblResultResult.setText(String.valueOf(result));
        lblUnits.setText(units);
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void cbVal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbVal1ActionPerformed
        // TODO add your handling code here:
        String value = String.valueOf(cbVal1.getSelectedItem());
        if (value.contains("/")) {
            String[] parts = value.split("/");
            value = parts[0];
        }
        if (value.equals("Gas Constant") || value.equals("Planck Constant") || value.equals("Speed of Light")) {
            tfVal1.setEditable(false);
            tfVal1.setToolTipText("This is a constant, so you don't have to put it in yourself! We've got it covered :)");
        } else {
            tfVal1.setEditable(true);
            tfVal1.setToolTipText("");
        }
    }//GEN-LAST:event_cbVal1ActionPerformed

    private void cbVal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbVal2ActionPerformed
        // TODO add your handling code here:
        String value = String.valueOf(cbVal1.getSelectedItem());
        if (value.contains("/")) {
            String[] parts = value.split("/");
            value = parts[0];
        }
        if (value.equals("Gas Constant") || value.equals("Planck Constant") || value.equals("Speed of Light")) {
            tfVal1.setEditable(false);
            tfVal1.setToolTipText("This is a constant, so you don't have to put it in yourself! We've got it covered :)");
        } else {
            tfVal1.setEditable(true);
        }
    }//GEN-LAST:event_cbVal2ActionPerformed

    private void tfVal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfVal1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfVal1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculations(user).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCalculate;
    private javax.swing.JComboBox<String> cbVal1;
    private javax.swing.JComboBox<String> cbVal2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblResult;
    private javax.swing.JLabel lblResultResult;
    private javax.swing.JLabel lblUnits;
    private javax.swing.JLabel lblVal1;
    private javax.swing.JLabel lblVal2;
    private javax.swing.JTextField tfVal1;
    private javax.swing.JTextField tfVal2;
    // End of variables declaration//GEN-END:variables
}
